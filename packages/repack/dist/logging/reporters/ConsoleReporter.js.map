{"version":3,"file":"ConsoleReporter.js","names":["_util","_interopRequireDefault","require","_colorette","_lodash","e","__esModule","default","ConsoleReporter","constructor","config","internalReporter","isWorker","asJson","JsonConsoleReporter","InteractiveConsoleReporter","process","log","flush","stop","exports","console","JSON","stringify","IS_SYMBOL_SUPPORTED","platform","env","CI","TERM","SYMBOLS","debug","colorette","gray","info","blue","warn","yellow","error","red","progress","green","FALLBACK_SYMBOLS","requestBuffer","level","type","firstMessage","message","processProgress","normalizedLog","normalizeLog","stdout","write","prettifyLog","throttle","value","label","percentage","Math","floor","timestamp","issuer","concat","push","msg","reqId","req","res","rest","bufferedReq","request","statusCode","method","url","Array","isArray","Object","keys","length","issuerOverride","undefined","body","colorizeText","toString","statusText","status","util","inspect","colors","depth","Date","toISOString","split","bold","logType","text"],"sources":["../../../src/logging/reporters/ConsoleReporter.ts"],"sourcesContent":["import util from 'util';\nimport colorette from 'colorette';\nimport throttle from 'lodash.throttle';\nimport type { LogEntry, LogType, Reporter } from '../types';\n\nexport interface ConsoleReporterConfig {\n  asJson?: boolean;\n  level?: 'silent' | 'normal' | 'verbose';\n  isWorker?: boolean;\n}\n\nexport class ConsoleReporter implements Reporter {\n  private internalReporter: Reporter;\n\n  constructor(private config: ConsoleReporterConfig) {\n    this.internalReporter =\n      this.config.isWorker || this.config.asJson\n        ? new JsonConsoleReporter(this.config)\n        : new InteractiveConsoleReporter(this.config);\n  }\n\n  process(log: LogEntry) {\n    this.internalReporter.process(log);\n  }\n\n  flush() {\n    this.internalReporter.flush();\n  }\n\n  stop() {\n    this.internalReporter.stop();\n  }\n}\n\nclass JsonConsoleReporter implements Reporter {\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    console.log(JSON.stringify(log));\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\nconst IS_SYMBOL_SUPPORTED =\n  process.platform !== 'win32' ||\n  process.env.CI ||\n  process.env.TERM === 'xterm-256color';\n\nconst SYMBOLS: Record<LogType | 'progress', string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('ℹ'),\n  warn: colorette.yellow('⚠'),\n  error: colorette.red('✖'),\n  progress: colorette.green('⇢'),\n};\n\nconst FALLBACK_SYMBOLS: Record<LogType | 'progress', string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('i'),\n  warn: colorette.yellow('!'),\n  error: colorette.red('x'),\n  progress: colorette.green('->'),\n};\n\nclass InteractiveConsoleReporter implements Reporter {\n  private requestBuffer: Record<string, Object> = {};\n\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    // Do not log anything in silent mode\n    if (this.config.level === 'silent') {\n      return;\n    }\n\n    // Do not log debug messages in non-verbose mode\n    if (log.type === 'debug' && this.config.level !== 'verbose') {\n      return;\n    }\n\n    const [firstMessage] = log.message;\n    if (typeof firstMessage === 'object' && 'progress' in firstMessage) {\n      this.processProgress(log);\n      return;\n    }\n\n    const normalizedLog = this.normalizeLog(log);\n    if (normalizedLog) {\n      process.stdout.write(\n        `${\n          IS_SYMBOL_SUPPORTED ? SYMBOLS[log.type] : FALLBACK_SYMBOLS[log.type]\n        } ${this.prettifyLog(normalizedLog)}\\n`\n      );\n    }\n  }\n\n  private processProgress = throttle((log: LogEntry) => {\n    const {\n      progress: { value, label, message, platform },\n    } = log.message[0] as {\n      progress: {\n        value: number;\n        label: string;\n        message: string;\n        platform: string;\n      };\n    };\n\n    const percentage = Math.floor(value * 100);\n\n    process.stdout.write(\n      `${\n        IS_SYMBOL_SUPPORTED ? SYMBOLS.progress : FALLBACK_SYMBOLS.progress\n      } ${this.prettifyLog({\n        timestamp: log.timestamp,\n        issuer: log.issuer,\n        type: 'info',\n        message: [`Compiling ${platform}: ${percentage}% ${label}`].concat(\n          ...(message ? [`(${message})`] : [])\n        ),\n      })}\\n`\n    );\n  }, 2000);\n\n  private normalizeLog(log: LogEntry): LogEntry | undefined {\n    const message = [];\n    let issuer = log.issuer;\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        message.push(value);\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'incoming request'\n      ) {\n        // Incoming dev server request\n        const { reqId, req } = value as unknown as {\n          reqId: string;\n          req: Object;\n        };\n        // Save req object, so that we can extract data when request gets completed\n        this.requestBuffer[reqId] = req;\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'request completed'\n      ) {\n        // Dev server response\n        const { reqId, res, msg, ...rest } = value as {\n          reqId: string;\n          res: Object;\n          msg: string | string[];\n        };\n        const bufferedReq = this.requestBuffer[reqId];\n        if (bufferedReq) {\n          message.push({\n            request: {\n              statusCode: (res as any).statusCode,\n              method: (bufferedReq as any).method,\n              url: (bufferedReq as any).url,\n            },\n          });\n        }\n\n        if (msg) {\n          message.push(...(Array.isArray(msg) ? msg : [msg]));\n        }\n\n        if (Object.keys(rest).length) {\n          message.push(rest);\n        }\n      } else if ('msg' in value) {\n        const {\n          msg,\n          issuer: issuerOverride,\n          ...rest\n        } = value as { msg: string | string[]; issuer?: string };\n        issuer = issuerOverride || issuer;\n        message.push(...(Array.isArray(msg) ? msg : [msg]), rest);\n      } else {\n        message.push(value);\n      }\n    }\n\n    // Ignore empty logs\n    if (!message.length) {\n      return undefined;\n    }\n\n    return {\n      timestamp: log.timestamp,\n      type: log.type,\n      issuer,\n      message,\n    };\n  }\n\n  private prettifyLog(log: LogEntry) {\n    let body = '';\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        // Colorize and concat primitive values\n        body += colorizeText(log.type, value.toString());\n        body += ' ';\n      } else if ('request' in value) {\n        // Colorize and concat dev server req/res object\n        const { request } = value as {\n          request: { method: string; statusCode: number; url: string };\n        };\n        let statusText = `${request.method} ${request.statusCode}`;\n\n        let status = colorette.green(statusText);\n        if (request.statusCode >= 500) {\n          status = colorette.red(statusText);\n        } else if (request.statusCode >= 400) {\n          status = colorette.yellow(statusText);\n        }\n\n        body += `${status} ${colorette.gray(request.url)}`;\n        body += ' ';\n      } else if (Object.keys(value).length) {\n        // Colorize and concat generic object\n        body +=\n          util.inspect(value, {\n            colors: true,\n            depth: 3,\n          }) + ' ';\n      }\n    }\n\n    return (\n      colorette.gray(\n        `[${new Date(log.timestamp).toISOString().split('T')[1]}]`\n      ) +\n      colorette.bold(`[${log.issuer}]`) +\n      ` ${body}`\n    );\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\n/**\n * Apply ANSI colors to given text.\n *\n * @param logType Log type for the text, based on which different colors will be applied.\n * @param text Text to apply the color onto.\n * @returns Text wrapped in ANSI color sequences.\n *\n * @internal\n */\nfunction colorizeText(logType: LogType, text: string) {\n  if (logType === 'warn') {\n    return colorette.yellow(text);\n  } else if (logType === 'error') {\n    return colorette.red(text);\n  }\n\n  return text;\n}\n"],"mappings":"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","ignoreList":[]}