{"version":3,"file":"inlineAssets.js","names":["_dedent","_interopRequireDefault","require","_mimeTypes","_utils","e","__esModule","default","inlineAssets","assets","resourcePath","resourceFilename","suffixPattern","mimeType","mimeTypes","lookup","undefined","size","getImageSize","Error","sourceSet","reduce","sources","asset","scale","encodeAsset","scales","JSON","stringify","Object","keys","map","Number","dedent","encodedContent","content","Buffer","toString","from","uri","width","height"],"sources":["../../../../src/webpack/loaders/assetsLoader/inlineAssets.ts"],"sourcesContent":["import dedent from 'dedent';\nimport mimeTypes from 'mime-types';\nimport type { Asset, ImageSize, URISource } from './types';\nimport { getImageSize } from './utils';\n\nexport function inlineAssets({\n  assets,\n  resourcePath,\n  resourceFilename,\n  suffixPattern,\n}: {\n  assets: Asset[];\n  resourcePath: string;\n  resourceFilename: string;\n  suffixPattern: string;\n}) {\n  const mimeType = mimeTypes.lookup(resourcePath) || undefined;\n  const size = getImageSize({ resourcePath, resourceFilename, suffixPattern });\n\n  if (!mimeType) {\n    throw new Error(\n      `Cannot inline asset for request ${resourcePath} - unable to detect MIME type`\n    );\n  }\n\n  // keys are always converted to strings\n  const sourceSet = assets.reduce(\n    (sources, asset) => {\n      sources[asset.scale] = encodeAsset(asset, mimeType, size);\n      return sources;\n    },\n    {} as Record<string, URISource>\n  );\n\n  const scales = JSON.stringify(Object.keys(sourceSet).map(Number));\n\n  /**\n   * To enable scale resolution in runtime we need to import PixelRatio & AssetSourceResolver\n   * Although we could use AssetSourceResolver as it is, we need to import PixelRatio to remain\n   * compatible with older versions of React-Native. Newer versions of React-Native use\n   * ESM for PixelRatio, so we need to check if PixelRatio is an ESM module and if so, adjust the import.\n   */\n  return dedent`\n    var PixelRatio = require('react-native/Libraries/Utilities/PixelRatio');\n    var AssetSourceResolver = require('react-native/Libraries/Image/AssetSourceResolver');\n\n    if (PixelRatio.__esModule) PixelRatio = PixelRatio.default;\n    var prefferedScale = AssetSourceResolver.pickScale(${scales}, PixelRatio.get());\n\n    module.exports = ${JSON.stringify(sourceSet)}[prefferedScale];\n  `;\n}\n\nfunction encodeAsset(\n  asset: Asset,\n  mimeType: string,\n  size?: ImageSize\n): URISource {\n  const encodedContent =\n    asset.content instanceof Buffer\n      ? asset.content.toString('base64')\n      : Buffer.from(asset.content ?? '').toString('base64');\n\n  return {\n    uri: `data:${mimeType};base64,${encodedContent}`,\n    width: size?.width,\n    height: size?.height,\n    scale: asset.scale,\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,MAAA,GAAAF,OAAA;AAAuC,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEhC,SAASG,YAAYA,CAAC;EAC3BC,MAAM;EACNC,YAAY;EACZC,gBAAgB;EAChBC;AAMF,CAAC,EAAE;EACD,MAAMC,QAAQ,GAAGC,kBAAS,CAACC,MAAM,CAACL,YAAY,CAAC,IAAIM,SAAS;EAC5D,MAAMC,IAAI,GAAG,IAAAC,mBAAY,EAAC;IAAER,YAAY;IAAEC,gBAAgB;IAAEC;EAAc,CAAC,CAAC;EAE5E,IAAI,CAACC,QAAQ,EAAE;IACb,MAAM,IAAIM,KAAK,CACb,mCAAmCT,YAAY,+BACjD,CAAC;EACH;;EAEA;EACA,MAAMU,SAAS,GAAGX,MAAM,CAACY,MAAM,CAC7B,CAACC,OAAO,EAAEC,KAAK,KAAK;IAClBD,OAAO,CAACC,KAAK,CAACC,KAAK,CAAC,GAAGC,WAAW,CAACF,KAAK,EAAEV,QAAQ,EAAEI,IAAI,CAAC;IACzD,OAAOK,OAAO;EAChB,CAAC,EACD,CAAC,CACH,CAAC;EAED,MAAMI,MAAM,GAAGC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACC,IAAI,CAACV,SAAS,CAAC,CAACW,GAAG,CAACC,MAAM,CAAC,CAAC;;EAEjE;AACF;AACA;AACA;AACA;AACA;EACE,OAAO,IAAAC,eAAM;AACf;AACA;AACA;AACA;AACA,yDAAyDP,MAAM;AAC/D;AACA,uBAAuBC,IAAI,CAACC,SAAS,CAACR,SAAS,CAAC;AAChD,GAAG;AACH;AAEA,SAASK,WAAWA,CAClBF,KAAY,EACZV,QAAgB,EAChBI,IAAgB,EACL;EACX,MAAMiB,cAAc,GAClBX,KAAK,CAACY,OAAO,YAAYC,MAAM,GAC3Bb,KAAK,CAACY,OAAO,CAACE,QAAQ,CAAC,QAAQ,CAAC,GAChCD,MAAM,CAACE,IAAI,CAACf,KAAK,CAACY,OAAO,IAAI,EAAE,CAAC,CAACE,QAAQ,CAAC,QAAQ,CAAC;EAEzD,OAAO;IACLE,GAAG,EAAE,QAAQ1B,QAAQ,WAAWqB,cAAc,EAAE;IAChDM,KAAK,EAAEvB,IAAI,EAAEuB,KAAK;IAClBC,MAAM,EAAExB,IAAI,EAAEwB,MAAM;IACpBjB,KAAK,EAAED,KAAK,CAACC;EACf,CAAC;AACH","ignoreList":[]}