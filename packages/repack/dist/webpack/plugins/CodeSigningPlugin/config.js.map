{"version":3,"file":"config.js","names":["_schemaUtils","require","optionsSchema","exports","type","properties","enabled","privateKeyPath","excludeChunks","anyOf","items","instanceof","required","additionalProperties","validateConfig","config","validate","name"],"sources":["../../../../src/webpack/plugins/CodeSigningPlugin/config.ts"],"sourcesContent":["import { validate } from 'schema-utils';\n\n/**\n * {@link CodeSigningPlugin} configuration options.\n */\nexport interface CodeSigningPluginConfig {\n  /** Whether the plugin is enabled. Defaults to true */\n  enabled?: boolean;\n  /** Path to the private key. */\n  privateKeyPath: string;\n  /** Names of chunks to exclude from being signed. */\n  excludeChunks?: string[] | RegExp | RegExp[];\n}\n\ntype Schema = Parameters<typeof validate>[0];\n\nexport const optionsSchema: Schema = {\n  type: 'object',\n  properties: {\n    enabled: { type: 'boolean' },\n    privateKeyPath: { type: 'string' },\n    excludeChunks: {\n      anyOf: [\n        {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        {\n          type: 'array',\n          items: {\n            instanceof: 'RegExp',\n          },\n        },\n        {\n          instanceof: 'RegExp',\n        },\n      ],\n    },\n  },\n  required: ['privateKeyPath'],\n  additionalProperties: false,\n};\n\nexport function validateConfig(config: CodeSigningPluginConfig) {\n  validate(optionsSchema, config, { name: 'CodeSigningPlugin' });\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA;AACA;AACA;;AAYO,MAAMC,aAAqB,GAAAC,OAAA,CAAAD,aAAA,GAAG;EACnCE,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACVC,OAAO,EAAE;MAAEF,IAAI,EAAE;IAAU,CAAC;IAC5BG,cAAc,EAAE;MAAEH,IAAI,EAAE;IAAS,CAAC;IAClCI,aAAa,EAAE;MACbC,KAAK,EAAE,CACL;QACEL,IAAI,EAAE,OAAO;QACbM,KAAK,EAAE;UACLN,IAAI,EAAE;QACR;MACF,CAAC,EACD;QACEA,IAAI,EAAE,OAAO;QACbM,KAAK,EAAE;UACLC,UAAU,EAAE;QACd;MACF,CAAC,EACD;QACEA,UAAU,EAAE;MACd,CAAC;IAEL;EACF,CAAC;EACDC,QAAQ,EAAE,CAAC,gBAAgB,CAAC;EAC5BC,oBAAoB,EAAE;AACxB,CAAC;AAEM,SAASC,cAAcA,CAACC,MAA+B,EAAE;EAC9D,IAAAC,qBAAQ,EAACd,aAAa,EAAEa,MAAM,EAAE;IAAEE,IAAI,EAAE;EAAoB,CAAC,CAAC;AAChE","ignoreList":[]}