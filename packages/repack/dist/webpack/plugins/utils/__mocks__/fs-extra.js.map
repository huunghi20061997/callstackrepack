{"version":3,"file":"fs-extra.js","names":["_path","_interopRequireDefault","require","e","__esModule","default","FsNode","constructor","path","makeDir","value","undefined","Error","children","makeFile","findDir","dirname","create","currentSegment","segments","split","sep","foundDir","child","join","push","FsMock","fs","ensureDir","copyFile","from","to","content","readFile","writeFile","filePath","basename","dirNode","found","file","_default","exports"],"sources":["../../../../../src/webpack/plugins/utils/__mocks__/fs-extra.ts"],"sourcesContent":["/* eslint-disable require-await */\nimport path from 'path';\n\nclass FsNode {\n  value?: string;\n  children?: FsNode[];\n\n  constructor(public path: string) {}\n\n  makeDir() {\n    if (this.value !== undefined) {\n      throw new Error('Node is already a file');\n    }\n\n    if (!this.children) {\n      this.children = [];\n    }\n  }\n\n  makeFile(value: string) {\n    if (this.children) {\n      throw new Error('Node is already a directory');\n    }\n    this.value = value;\n  }\n\n  findDir(dirname: string, create = false): FsNode {\n    if (this.value !== undefined || this.children == undefined) {\n      throw new Error('not a directory');\n    }\n\n    const [currentSegment, ...segments] = dirname.split(path.sep);\n\n    if (currentSegment === '.') {\n      return this;\n    }\n\n    let foundDir: FsNode | undefined;\n    for (const child of this.children) {\n      if (child.children && child.path === currentSegment) {\n        foundDir = child.findDir(path.join(...segments), create);\n      }\n    }\n\n    if (!foundDir) {\n      if (create) {\n        const child = new FsNode(currentSegment);\n        child.makeDir();\n        this.children.push(child);\n        foundDir = child.findDir(path.join(...segments), create);\n      } else {\n        throw new Error(`directory does not exist: ${dirname}`);\n      }\n    }\n\n    return foundDir;\n  }\n}\n\nclass FsMock {\n  fs: FsNode;\n\n  constructor() {\n    this.fs = new FsNode('/');\n    this.fs.makeDir();\n  }\n\n  async ensureDir(dirname: string) {\n    const [, ...segments] = dirname.split(path.sep);\n    this.fs.findDir(path.join(...segments), true);\n  }\n\n  async copyFile(from: string, to: string) {\n    const content = await this.readFile(from);\n    await this.writeFile(to, content);\n  }\n\n  async readFile(filePath: string) {\n    const [, ...segments] = path.dirname(filePath).split(path.sep);\n    const dirname = path.join(...segments);\n    const basename = path.basename(filePath);\n\n    const dirNode = this.fs.findDir(dirname);\n    for (const child of dirNode.children ?? []) {\n      if (child.path === basename) {\n        if (child.value === undefined) {\n          throw new Error('not a file');\n        }\n\n        return child.value;\n      }\n    }\n\n    throw new Error(`no such file: ${filePath}`);\n  }\n\n  async writeFile(filePath: string, value: string) {\n    const [, ...segments] = path.dirname(filePath).split(path.sep);\n    const dirname = path.join(...segments);\n    const basename = path.basename(filePath);\n\n    const dirNode = this.fs.findDir(dirname);\n    let found = false;\n    for (const child of dirNode.children ?? []) {\n      if (child.path === basename) {\n        if (child.children !== undefined) {\n          throw new Error(`not a file: ${filePath}`);\n        }\n\n        child.value = value;\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      const file = new FsNode(basename);\n      file.makeFile(value);\n      dirNode.children!.push(file);\n    }\n  }\n}\n\nexport default new FsMock();\n"],"mappings":"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","ignoreList":[]}