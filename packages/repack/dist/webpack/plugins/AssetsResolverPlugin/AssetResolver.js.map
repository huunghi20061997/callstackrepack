{"version":3,"file":"AssetResolver.js","names":["_path","_interopRequireDefault","require","_escapeStringRegexp","_assetExtensions","e","__esModule","default","AssetResolver","collectScales","scalableAssetExtensions","files","name","type","platform","regex","includes","RegExp","escapeStringRegexp","priority","queryPlatform","indexOf","output","file","match","exec","scale","constructor","config","compiler","apply","resolver","test","getAssetExtensionsRegExp","extensions","logger","getInfrastructureLogger","getHook","tapAsync","request","_context","callback","requestPath","path","debug","fileSystem","readdir","dirname","error","results","basename","replace","extname","substring","filter","result","resolved","undefined","map","scalableExtensions","key","Object","keys","sort","a","b","Number","resolve","scales","resolvedFile","relativePath","join","exports"],"sources":["../../../../src/webpack/plugins/AssetsResolverPlugin/AssetResolver.ts"],"sourcesContent":["import path from 'path';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport webpack, { Resolver } from 'webpack';\nimport { getAssetExtensionsRegExp } from '../../utils/assetExtensions';\n\n/**\n * {@link AssetResolver} configuration options.\n */\nexport interface AssetResolverConfig {\n  /**\n   * Override default asset extensions. If the asset matches one of the extensions, it will be process\n   * by the custom React Native asset resolver. Otherwise, the resolution will process normally and\n   * the asset will be handled by Webpack.\n   */\n  extensions?: string[];\n\n  /**\n   * Override default scalable extensions, which processes only scalable assets like images\n   * to create a map of DPI variants of the asset.\n   */\n  scalableExtensions?: string[];\n\n  /** Target application platform. */\n  platform: string;\n}\n\nexport interface CollectedScales {\n  [key: string]: {\n    platform: string;\n    name: string;\n  };\n}\n\ninterface CollectOptions {\n  name: string;\n  platform: string;\n  type: string;\n}\n\nexport class AssetResolver {\n  static collectScales(\n    scalableAssetExtensions: string[],\n    files: string[],\n    { name, type, platform }: CollectOptions\n  ): CollectedScales {\n    const regex = scalableAssetExtensions.includes(type)\n      ? new RegExp(\n          `^${escapeStringRegexp(\n            name\n          )}(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${platform}|native))?.${escapeStringRegexp(\n            type\n          )}$`\n        )\n      : new RegExp(\n          `^${escapeStringRegexp(name)}(\\\\.(${platform}|native))?\\\\.${type}$`\n        );\n\n    const priority = (queryPlatform: string) =>\n      ['native', platform].indexOf(queryPlatform);\n\n    // Build a map of files according to the scale\n    const output: CollectedScales = {};\n    for (const file of files) {\n      const match = regex.exec(file);\n      if (match) {\n        let [, scale, , , platform] = match;\n        scale = scale || '@1x';\n        if (\n          !output[scale] ||\n          priority(platform) > priority(output[scale].platform)\n        ) {\n          output[scale] = { platform, name: file };\n        }\n      }\n    }\n\n    return output;\n  }\n\n  constructor(\n    public readonly config: AssetResolverConfig,\n    private compiler: webpack.Compiler\n  ) {}\n\n  apply(resolver: Resolver) {\n    const platform = this.config.platform;\n    const test = getAssetExtensionsRegExp(this.config.extensions!);\n\n    const logger = this.compiler.getInfrastructureLogger('RepackAssetResolver');\n\n    resolver\n      .getHook('file')\n      .tapAsync('RepackAssetResolver', (request, _context, callback) => {\n        const requestPath = request.path;\n        if (\n          (typeof requestPath === 'string' && !test.test(requestPath)) ||\n          requestPath === false\n        ) {\n          callback();\n          return;\n        }\n\n        logger.debug('Processing asset:', requestPath);\n\n        resolver.fileSystem.readdir(\n          path.dirname(requestPath),\n          (error, results) => {\n            if (error) {\n              callback();\n              return;\n            }\n\n            const basename = path.basename(requestPath);\n            const name = basename.replace(/\\.[^.]+$/, '');\n            const type = path.extname(requestPath).substring(1);\n            const files = ((results as Array<string | Buffer>)?.filter(\n              (result) => typeof result === 'string'\n            ) ?? []) as string[];\n\n            let resolved = files.includes(basename) ? requestPath : undefined;\n\n            if (!resolved) {\n              const map = AssetResolver.collectScales(\n                this.config.scalableExtensions!,\n                files,\n                {\n                  name,\n                  type,\n                  platform,\n                }\n              );\n              const key = map['@1x']\n                ? '@1x'\n                : Object.keys(map).sort(\n                    (a, b) =>\n                      Number(a.replace(/[^\\d.]/g, '')) -\n                      Number(b.replace(/[^\\d.]/g, ''))\n                  )[0];\n\n              resolved = map[key]?.name\n                ? path.resolve(path.dirname(requestPath), map[key].name)\n                : undefined;\n\n              if (!resolved) {\n                logger.error('Cannot resolve:', requestPath, {\n                  files,\n                  scales: map,\n                });\n                callback();\n                return;\n              }\n            }\n\n            const resolvedFile = {\n              ...request,\n              path: resolved,\n              relativePath:\n                request.relativePath &&\n                resolver.join(request.relativePath, resolved),\n              file: true,\n            };\n\n            logger.debug('Asset resolved:', requestPath, '->', resolved);\n\n            callback(null, resolvedFile);\n          }\n        );\n      });\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,gBAAA,GAAAF,OAAA;AAAuE,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEvE;AACA;AACA;;AAgCO,MAAMG,aAAa,CAAC;EACzB,OAAOC,aAAaA,CAClBC,uBAAiC,EACjCC,KAAe,EACf;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAyB,CAAC,EACvB;IACjB,MAAMC,KAAK,GAAGL,uBAAuB,CAACM,QAAQ,CAACH,IAAI,CAAC,GAChD,IAAII,MAAM,CACR,IAAI,IAAAC,2BAAkB,EACpBN,IACF,CAAC,2BAA2BE,QAAQ,cAAc,IAAAI,2BAAkB,EAClEL,IACF,CAAC,GACH,CAAC,GACD,IAAII,MAAM,CACR,IAAI,IAAAC,2BAAkB,EAACN,IAAI,CAAC,QAAQE,QAAQ,gBAAgBD,IAAI,GAClE,CAAC;IAEL,MAAMM,QAAQ,GAAIC,aAAqB,IACrC,CAAC,QAAQ,EAAEN,QAAQ,CAAC,CAACO,OAAO,CAACD,aAAa,CAAC;;IAE7C;IACA,MAAME,MAAuB,GAAG,CAAC,CAAC;IAClC,KAAK,MAAMC,IAAI,IAAIZ,KAAK,EAAE;MACxB,MAAMa,KAAK,GAAGT,KAAK,CAACU,IAAI,CAACF,IAAI,CAAC;MAC9B,IAAIC,KAAK,EAAE;QACT,IAAI,GAAGE,KAAK,IAAMZ,QAAQ,CAAC,GAAGU,KAAK;QACnCE,KAAK,GAAGA,KAAK,IAAI,KAAK;QACtB,IACE,CAACJ,MAAM,CAACI,KAAK,CAAC,IACdP,QAAQ,CAACL,QAAQ,CAAC,GAAGK,QAAQ,CAACG,MAAM,CAACI,KAAK,CAAC,CAACZ,QAAQ,CAAC,EACrD;UACAQ,MAAM,CAACI,KAAK,CAAC,GAAG;YAAEZ,QAAQ;YAAEF,IAAI,EAAEW;UAAK,CAAC;QAC1C;MACF;IACF;IAEA,OAAOD,MAAM;EACf;EAEAK,WAAWA,CACOC,MAA2B,EACnCC,QAA0B,EAClC;IAAA,KAFgBD,MAA2B,GAA3BA,MAA2B;IAAA,KACnCC,QAA0B,GAA1BA,QAA0B;EACjC;EAEHC,KAAKA,CAACC,QAAkB,EAAE;IACxB,MAAMjB,QAAQ,GAAG,IAAI,CAACc,MAAM,CAACd,QAAQ;IACrC,MAAMkB,IAAI,GAAG,IAAAC,yCAAwB,EAAC,IAAI,CAACL,MAAM,CAACM,UAAW,CAAC;IAE9D,MAAMC,MAAM,GAAG,IAAI,CAACN,QAAQ,CAACO,uBAAuB,CAAC,qBAAqB,CAAC;IAE3EL,QAAQ,CACLM,OAAO,CAAC,MAAM,CAAC,CACfC,QAAQ,CAAC,qBAAqB,EAAE,CAACC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;MAChE,MAAMC,WAAW,GAAGH,OAAO,CAACI,IAAI;MAChC,IACG,OAAOD,WAAW,KAAK,QAAQ,IAAI,CAACV,IAAI,CAACA,IAAI,CAACU,WAAW,CAAC,IAC3DA,WAAW,KAAK,KAAK,EACrB;QACAD,QAAQ,CAAC,CAAC;QACV;MACF;MAEAN,MAAM,CAACS,KAAK,CAAC,mBAAmB,EAAEF,WAAW,CAAC;MAE9CX,QAAQ,CAACc,UAAU,CAACC,OAAO,CACzBH,aAAI,CAACI,OAAO,CAACL,WAAW,CAAC,EACzB,CAACM,KAAK,EAAEC,OAAO,KAAK;QAClB,IAAID,KAAK,EAAE;UACTP,QAAQ,CAAC,CAAC;UACV;QACF;QAEA,MAAMS,QAAQ,GAAGP,aAAI,CAACO,QAAQ,CAACR,WAAW,CAAC;QAC3C,MAAM9B,IAAI,GAAGsC,QAAQ,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QAC7C,MAAMtC,IAAI,GAAG8B,aAAI,CAACS,OAAO,CAACV,WAAW,CAAC,CAACW,SAAS,CAAC,CAAC,CAAC;QACnD,MAAM1C,KAAK,GAAKsC,OAAO,EAA6BK,MAAM,CACvDC,MAAM,IAAK,OAAOA,MAAM,KAAK,QAChC,CAAC,IAAI,EAAe;QAEpB,IAAIC,QAAQ,GAAG7C,KAAK,CAACK,QAAQ,CAACkC,QAAQ,CAAC,GAAGR,WAAW,GAAGe,SAAS;QAEjE,IAAI,CAACD,QAAQ,EAAE;UACb,MAAME,GAAG,GAAGlD,aAAa,CAACC,aAAa,CACrC,IAAI,CAACmB,MAAM,CAAC+B,kBAAkB,EAC9BhD,KAAK,EACL;YACEC,IAAI;YACJC,IAAI;YACJC;UACF,CACF,CAAC;UACD,MAAM8C,GAAG,GAAGF,GAAG,CAAC,KAAK,CAAC,GAClB,KAAK,GACLG,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,IAAI,CACnB,CAACC,CAAC,EAAEC,CAAC,KACHC,MAAM,CAACF,CAAC,CAACb,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,GAChCe,MAAM,CAACD,CAAC,CAACd,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACnC,CAAC,CAAC,CAAC,CAAC;UAERK,QAAQ,GAAGE,GAAG,CAACE,GAAG,CAAC,EAAEhD,IAAI,GACrB+B,aAAI,CAACwB,OAAO,CAACxB,aAAI,CAACI,OAAO,CAACL,WAAW,CAAC,EAAEgB,GAAG,CAACE,GAAG,CAAC,CAAChD,IAAI,CAAC,GACtD6C,SAAS;UAEb,IAAI,CAACD,QAAQ,EAAE;YACbrB,MAAM,CAACa,KAAK,CAAC,iBAAiB,EAAEN,WAAW,EAAE;cAC3C/B,KAAK;cACLyD,MAAM,EAAEV;YACV,CAAC,CAAC;YACFjB,QAAQ,CAAC,CAAC;YACV;UACF;QACF;QAEA,MAAM4B,YAAY,GAAG;UACnB,GAAG9B,OAAO;UACVI,IAAI,EAAEa,QAAQ;UACdc,YAAY,EACV/B,OAAO,CAAC+B,YAAY,IACpBvC,QAAQ,CAACwC,IAAI,CAAChC,OAAO,CAAC+B,YAAY,EAAEd,QAAQ,CAAC;UAC/CjC,IAAI,EAAE;QACR,CAAC;QAEDY,MAAM,CAACS,KAAK,CAAC,iBAAiB,EAAEF,WAAW,EAAE,IAAI,EAAEc,QAAQ,CAAC;QAE5Df,QAAQ,CAAC,IAAI,EAAE4B,YAAY,CAAC;MAC9B,CACF,CAAC;IACH,CAAC,CAAC;EACN;AACF;AAACG,OAAA,CAAAhE,aAAA,GAAAA,aAAA","ignoreList":[]}