{"version":3,"file":"JavaScriptLooseModePlugin.js","names":["_webpack","_interopRequireDefault","require","e","__esModule","default","JavaScriptLooseModePlugin","constructor","config","apply","compiler","shouldUseLooseMode","filename","webpack","ModuleFilenameHelpers","matchObject","hooks","make","tap","compilation","moduleTemplates","javascript","render","moduleSource","resource","source","toString","match","index","undefined","replacement","sources","ReplaceSource","replace","length","exports"],"sources":["../../../src/webpack/plugins/JavaScriptLooseModePlugin.ts"],"sourcesContent":["import webpack from 'webpack';\nimport { Rule, WebpackPlugin } from '../../types';\n\n/**\n * {@link JavaScriptLooseModePlugin} configuration options.\n */\nexport interface JavaScriptLooseModePluginConfig {\n  /** Convert to loose mode all modules that match the rule. */\n  test: Rule | Rule[];\n  /** Convert to loose mode only those modules that match the rule. */\n  include: Rule | Rule[];\n  /** Exclude all modules that mach the rule from being converted to loose mode. */\n  exclude: Rule | Rule[];\n}\n\n/**\n * Enable JavaScript loose mode, by removing `use strict` directives from the code.\n * This plugin should only be used for compatibility reasons with Metro, where some libraries\n * might not work in JavaScript Strict mode.\n *\n * @category Webpack Plugin\n */\nexport class JavaScriptLooseModePlugin implements WebpackPlugin {\n  /**\n   * Constructs new `JavaScriptLooseModePlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: JavaScriptLooseModePluginConfig) {}\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    const shouldUseLooseMode = (filename: string) =>\n      webpack.ModuleFilenameHelpers.matchObject(this.config, filename);\n\n    compiler.hooks.make.tap(\n      'JavaScriptLooseModePlugin',\n      (compilation: webpack.Compilation) => {\n        compilation.moduleTemplates.javascript.hooks.render.tap(\n          'JavaScriptLooseModePlugin',\n          // @ts-ignore\n          (\n            moduleSource: webpack.sources.Source,\n            { resource }: { resource: string }\n          ) => {\n            if (!shouldUseLooseMode(resource)) {\n              return moduleSource;\n            }\n\n            const source = moduleSource.source().toString();\n            const match = source.match(/['\"]use strict['\"]/);\n            if (match?.index === undefined) {\n              return moduleSource;\n            }\n            const replacement = new webpack.sources.ReplaceSource(moduleSource);\n            replacement.replace(match.index, match.index + match[0].length, '');\n            return replacement;\n          }\n        );\n      }\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAG9B;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMG,yBAAyB,CAA0B;EAC9D;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAASC,MAAuC,EAAE;IAAA,KAAzCA,MAAuC,GAAvCA,MAAuC;EAAG;;EAE9D;AACF;AACA;AACA;AACA;EACEC,KAAKA,CAACC,QAA0B,EAAE;IAChC,MAAMC,kBAAkB,GAAIC,QAAgB,IAC1CC,gBAAO,CAACC,qBAAqB,CAACC,WAAW,CAAC,IAAI,CAACP,MAAM,EAAEI,QAAQ,CAAC;IAElEF,QAAQ,CAACM,KAAK,CAACC,IAAI,CAACC,GAAG,CACrB,2BAA2B,EAC1BC,WAAgC,IAAK;MACpCA,WAAW,CAACC,eAAe,CAACC,UAAU,CAACL,KAAK,CAACM,MAAM,CAACJ,GAAG,CACrD,2BAA2B;MAC3B;MACA,CACEK,YAAoC,EACpC;QAAEC;MAA+B,CAAC,KAC/B;QACH,IAAI,CAACb,kBAAkB,CAACa,QAAQ,CAAC,EAAE;UACjC,OAAOD,YAAY;QACrB;QAEA,MAAME,MAAM,GAAGF,YAAY,CAACE,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QAC/C,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK,CAAC,oBAAoB,CAAC;QAChD,IAAIA,KAAK,EAAEC,KAAK,KAAKC,SAAS,EAAE;UAC9B,OAAON,YAAY;QACrB;QACA,MAAMO,WAAW,GAAG,IAAIjB,gBAAO,CAACkB,OAAO,CAACC,aAAa,CAACT,YAAY,CAAC;QACnEO,WAAW,CAACG,OAAO,CAACN,KAAK,CAACC,KAAK,EAAED,KAAK,CAACC,KAAK,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACO,MAAM,EAAE,EAAE,CAAC;QACnE,OAAOJ,WAAW;MACpB,CACF,CAAC;IACH,CACF,CAAC;EACH;AACF;AAACK,OAAA,CAAA7B,yBAAA,GAAAA,yBAAA","ignoreList":[]}