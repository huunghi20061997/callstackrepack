{"version":3,"file":"loadWebpackConfig.js","names":["loadWebpackConfig","webpackConfigPath","env","config","require","default"],"sources":["../../src/webpack/loadWebpackConfig.ts"],"sourcesContent":["import webpack from 'webpack';\nimport { WebpackEnvOptions } from '../types';\n\ntype WebpackConfig =\n  | webpack.Configuration\n  | ((\n      env: WebpackEnvOptions,\n      argv: Record<string, any>\n    ) => webpack.Configuration | Promise<webpack.Configuration>);\n\nexport async function loadWebpackConfig(\n  webpackConfigPath: string,\n  env: WebpackEnvOptions\n) {\n  let config: WebpackConfig;\n\n  try {\n    config = require(webpackConfigPath);\n  } catch {\n    config = await import(webpackConfigPath);\n  }\n\n  if ('default' in config) {\n    config = (config as { default: WebpackConfig }).default;\n  }\n\n  if (typeof config === 'function') {\n    return await config(env, {});\n  }\n\n  return config;\n}\n"],"mappings":";;;;;;AAUO,eAAeA,iBAAiBA,CACrCC,iBAAyB,EACzBC,GAAsB,EACtB;EACA,IAAIC,MAAqB;EAEzB,IAAI;IACFA,MAAM,GAAGC,OAAO,CAACH,iBAAiB,CAAC;EACrC,CAAC,CAAC,MAAM;IACNE,MAAM,GAAG,MAAM,MAAM,CAACF,iBAAiB,CAAC;EAC1C;EAEA,IAAI,SAAS,IAAIE,MAAM,EAAE;IACvBA,MAAM,GAAIA,MAAM,CAAgCE,OAAO;EACzD;EAEA,IAAI,OAAOF,MAAM,KAAK,UAAU,EAAE;IAChC,OAAO,MAAMA,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC,CAAC;EAC9B;EAEA,OAAOC,MAAM;AACf","ignoreList":[]}