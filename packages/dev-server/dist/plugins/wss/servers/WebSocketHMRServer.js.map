{"version":3,"file":"WebSocketHMRServer.js","names":["URL","WebSocketServer","WebSocketHMRServer","clients","Map","nextClientId","constructor","fastify","delegate","getUriPath","send","event","platform","clientIds","data","JSON","stringify","key","socket","clientId","includes","error","log","msg","onConnection","request","searchParams","url","get","info","close","client","set","onClose","delete","addEventListener","onClientConnected"],"sources":["../../../../src/plugins/wss/servers/WebSocketHMRServer.ts"],"sourcesContent":["import { URL } from 'url';\nimport { IncomingMessage } from 'http';\nimport { FastifyInstance } from 'fastify';\nimport WebSocket from 'ws';\nimport { HmrDelegate } from '../types';\nimport { WebSocketServer } from '../WebSocketServer';\n\n/**\n * Class for creating a WebSocket server for Hot Module Replacement.\n *\n * @category Development server\n */\nexport class WebSocketHMRServer extends WebSocketServer {\n  private clients = new Map<\n    { clientId: string; platform: string },\n    WebSocket\n  >();\n  private nextClientId = 0;\n\n  /**\n   * Create new instance of WebSocketHMRServer and attach it to the given Fastify instance.\n   * Any logging information, will be passed through standard `fastify.log` API.\n   *\n   * @param fastify Fastify instance to attach the WebSocket server to.\n   * @param delegate HMR delegate instance.\n   */\n  constructor(\n    fastify: FastifyInstance,\n    private delegate: HmrDelegate\n  ) {\n    super(fastify, delegate.getUriPath());\n  }\n\n  /**\n   * Send action to all connected HMR clients.\n   *\n   * @param event Event to send to the clients.\n   * @param platform Platform of clients to send the event to.\n   * @param clientIds Ids of clients who should receive the event.\n   */\n  send(event: any, platform: string, clientIds?: string[]) {\n    const data = typeof event === 'string' ? event : JSON.stringify(event);\n\n    for (const [key, socket] of this.clients) {\n      if (\n        key.platform !== platform ||\n        !(clientIds ?? [key.clientId]).includes(key.clientId)\n      ) {\n        continue;\n      }\n\n      try {\n        socket.send(data);\n      } catch (error) {\n        this.fastify.log.error({\n          msg: 'Cannot send action to client',\n          event,\n          error,\n          ...key,\n        });\n      }\n    }\n  }\n\n  /**\n   * Process new WebSocket connection from HMR client.\n   *\n   * @param socket Incoming HMR client's WebSocket connection.\n   */\n  onConnection(socket: WebSocket, request: IncomingMessage) {\n    const { searchParams } = new URL(request.url || '', 'http://localhost');\n    const platform = searchParams.get('platform');\n\n    if (!platform) {\n      this.fastify.log.info({\n        msg: 'HMR connection disconnected - missing platform',\n      });\n      socket.close();\n      return;\n    }\n\n    const clientId = `client#${this.nextClientId++}`;\n\n    const client = {\n      clientId,\n      platform,\n    };\n\n    this.clients.set(client, socket);\n\n    this.fastify.log.info({ msg: 'HMR client connected', ...client });\n\n    const onClose = () => {\n      this.fastify.log.info({\n        msg: 'HMR client disconnected',\n        ...client,\n      });\n      this.clients.delete(client);\n    };\n\n    socket.addEventListener('error', onClose);\n    socket.addEventListener('close', onClose);\n\n    this.delegate.onClientConnected(platform, clientId);\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,KAAK;AAAC,SAKjBC,eAAe;AAExB;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,SAASD,eAAe,CAAC;EAC9CE,OAAO,GAAG,IAAIC,GAAG,CAGvB,CAAC;EACKC,YAAY,GAAG,CAAC;;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CACTC,OAAwB,EAChBC,QAAqB,EAC7B;IACA,KAAK,CAACD,OAAO,EAAEC,QAAQ,CAACC,UAAU,CAAC,CAAC,CAAC;IAAC,KAF9BD,QAAqB,GAArBA,QAAqB;EAG/B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,IAAIA,CAACC,KAAU,EAAEC,QAAgB,EAAEC,SAAoB,EAAE;IACvD,MAAMC,IAAI,GAAG,OAAOH,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGI,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC;IAEtE,KAAK,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,IAAI,IAAI,CAACf,OAAO,EAAE;MACxC,IACEc,GAAG,CAACL,QAAQ,KAAKA,QAAQ,IACzB,CAAC,CAACC,SAAS,IAAI,CAACI,GAAG,CAACE,QAAQ,CAAC,EAAEC,QAAQ,CAACH,GAAG,CAACE,QAAQ,CAAC,EACrD;QACA;MACF;MAEA,IAAI;QACFD,MAAM,CAACR,IAAI,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACd,IAAI,CAACd,OAAO,CAACe,GAAG,CAACD,KAAK,CAAC;UACrBE,GAAG,EAAE,8BAA8B;UACnCZ,KAAK;UACLU,KAAK;UACL,GAAGJ;QACL,CAAC,CAAC;MACJ;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEO,YAAYA,CAACN,MAAiB,EAAEO,OAAwB,EAAE;IACxD,MAAM;MAAEC;IAAa,CAAC,GAAG,IAAI1B,GAAG,CAACyB,OAAO,CAACE,GAAG,IAAI,EAAE,EAAE,kBAAkB,CAAC;IACvE,MAAMf,QAAQ,GAAGc,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;IAE7C,IAAI,CAAChB,QAAQ,EAAE;MACb,IAAI,CAACL,OAAO,CAACe,GAAG,CAACO,IAAI,CAAC;QACpBN,GAAG,EAAE;MACP,CAAC,CAAC;MACFL,MAAM,CAACY,KAAK,CAAC,CAAC;MACd;IACF;IAEA,MAAMX,QAAQ,GAAG,UAAU,IAAI,CAACd,YAAY,EAAE,EAAE;IAEhD,MAAM0B,MAAM,GAAG;MACbZ,QAAQ;MACRP;IACF,CAAC;IAED,IAAI,CAACT,OAAO,CAAC6B,GAAG,CAACD,MAAM,EAAEb,MAAM,CAAC;IAEhC,IAAI,CAACX,OAAO,CAACe,GAAG,CAACO,IAAI,CAAC;MAAEN,GAAG,EAAE,sBAAsB;MAAE,GAAGQ;IAAO,CAAC,CAAC;IAEjE,MAAME,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAI,CAAC1B,OAAO,CAACe,GAAG,CAACO,IAAI,CAAC;QACpBN,GAAG,EAAE,yBAAyB;QAC9B,GAAGQ;MACL,CAAC,CAAC;MACF,IAAI,CAAC5B,OAAO,CAAC+B,MAAM,CAACH,MAAM,CAAC;IAC7B,CAAC;IAEDb,MAAM,CAACiB,gBAAgB,CAAC,OAAO,EAAEF,OAAO,CAAC;IACzCf,MAAM,CAACiB,gBAAgB,CAAC,OAAO,EAAEF,OAAO,CAAC;IAEzC,IAAI,CAACzB,QAAQ,CAAC4B,iBAAiB,CAACxB,QAAQ,EAAEO,QAAQ,CAAC;EACrD;AACF","ignoreList":[]}