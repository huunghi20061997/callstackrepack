{"version":3,"file":"compilerPlugin.js","names":["fastifyPlugin","compilerPlugin","instance","delegate","route","method","url","schema","querystring","type","properties","platform","handler","request","reply","file","params","query","log","error","notFound","compiler","inferPlatform","badRequest","startsWith","replace","multipart","asMultipart","sendProgress","completed","total","writeChunk","JSON","stringify","done","asset","getAsset","mimeType","getMimeType","buffer","Buffer","isBuffer","from","setHeader","String","byteLength","end","code","send","message","name","dependencies"],"sources":["../../../src/plugins/compiler/compilerPlugin.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify';\nimport fastifyPlugin from 'fastify-plugin';\nimport type { Server } from '../../types';\nimport type { SendProgress } from '../../types';\n\nasync function compilerPlugin(\n  instance: FastifyInstance,\n  { delegate }: { delegate: Server.Delegate }\n) {\n  instance.route({\n    method: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'HEAD'],\n    url: '/*',\n    schema: {\n      querystring: {\n        type: 'object',\n        properties: {\n          platform: {\n            type: 'string',\n          },\n        },\n      },\n    },\n    handler: async (request, reply) => {\n      let file = (request.params as { '*'?: string })['*'];\n      let { platform } = request.query as { platform?: string };\n\n      if (!file) {\n        // This technically should never happen - this route should not be called if file is missing.\n        request.log.error(`File was not provided`);\n        return reply.notFound();\n      }\n\n      // Let consumer infer the platform. If function is not provided fallback\n      // to platform query param.\n      platform = delegate.compiler.inferPlatform?.(request.url) ?? platform;\n\n      if (!platform) {\n        request.log.error('Cannot detect platform');\n        return reply.badRequest('Cannot detect platform');\n      }\n\n      // If platform happens to be in front of an asset remove it.\n      if (file.startsWith(`${platform}/`)) {\n        file = file.replace(`${platform}/`, '');\n      }\n\n      const multipart = reply.asMultipart();\n\n      const sendProgress: SendProgress = ({ completed, total }) => {\n        multipart?.writeChunk(\n          { 'Content-Type': 'application/json' },\n          JSON.stringify({\n            done: completed,\n            total,\n          })\n        );\n      };\n\n      try {\n        const asset = await delegate.compiler.getAsset(\n          file,\n          platform,\n          sendProgress\n        );\n        const mimeType = delegate.compiler.getMimeType(file, platform, asset);\n\n        if (multipart) {\n          const buffer = Buffer.isBuffer(asset) ? asset : Buffer.from(asset);\n          multipart.setHeader('Content-Type', `${mimeType}; charset=UTF-8`);\n          multipart.setHeader(\n            'Content-Length',\n            String(Buffer.byteLength(buffer))\n          );\n          multipart.end(buffer);\n        } else {\n          return reply.code(200).type(mimeType).send(asset);\n        }\n      } catch (error) {\n        request.log.error(error);\n        return reply.notFound((error as Error).message);\n      }\n    },\n  });\n}\n\nexport default fastifyPlugin(compilerPlugin, {\n  name: 'compiler-plugin',\n  dependencies: ['@fastify/sensible', 'multipart-plugin'],\n});\n"],"mappings":"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","ignoreList":[]}