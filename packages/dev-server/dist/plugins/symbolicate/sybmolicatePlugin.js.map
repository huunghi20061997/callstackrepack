{"version":3,"file":"sybmolicatePlugin.js","names":["fastifyPlugin","Symbolicator","symbolicatePlugin","instance","delegate","symbolicator","post","request","reply","stack","JSON","parse","body","platform","inferPlatformFromStack","log","debug","msg","badRequest","results","process","send","error","message","internalServerError","name","dependencies"],"sources":["../../../src/plugins/symbolicate/sybmolicatePlugin.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify';\nimport fastifyPlugin from 'fastify-plugin';\nimport type { Server } from '../../types';\nimport { Symbolicator } from './Symbolicator';\nimport type { ReactNativeStackFrame } from './types';\n\nasync function symbolicatePlugin(\n  instance: FastifyInstance,\n  {\n    delegate,\n  }: {\n    delegate: Server.Delegate;\n  }\n) {\n  const symbolicator = new Symbolicator(delegate.symbolicator);\n\n  instance.post('/symbolicate', async (request, reply) => {\n    // React Native sends stack as JSON but tests content-type to text/plain, so\n    // we cannot use JSON schema to validate the body.\n\n    try {\n      const { stack } = JSON.parse(request.body as string) as {\n        stack: ReactNativeStackFrame[];\n      };\n      const platform = Symbolicator.inferPlatformFromStack(stack);\n      if (!platform) {\n        request.log.debug({ msg: 'Received stack', stack });\n        reply.badRequest('Cannot infer platform from stack trace');\n      } else {\n        request.log.debug({ msg: 'Starting symbolication', platform, stack });\n        const results = await symbolicator.process(request.log, stack);\n        reply.send(results);\n      }\n    } catch (error) {\n      request.log.error({\n        msg: 'Failed to symbolicate',\n        error: (error as Error).message,\n      });\n      reply.internalServerError();\n    }\n  });\n}\n\nexport default fastifyPlugin(symbolicatePlugin, {\n  name: 'symbolicate-plugin',\n  dependencies: ['@fastify/sensible'],\n});\n"],"mappings":"AACA,OAAOA,aAAa,MAAM,gBAAgB;AAAC,SAElCC,YAAY;AAGrB,eAAeC,iBAAiBA,CAC9BC,QAAyB,EACzB;EACEC;AAGF,CAAC,EACD;EACA,MAAMC,YAAY,GAAG,IAAIJ,YAAY,CAACG,QAAQ,CAACC,YAAY,CAAC;EAE5DF,QAAQ,CAACG,IAAI,CAAC,cAAc,EAAE,OAAOC,OAAO,EAAEC,KAAK,KAAK;IACtD;IACA;;IAEA,IAAI;MACF,MAAM;QAAEC;MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACK,IAAc,CAElD;MACD,MAAMC,QAAQ,GAAGZ,YAAY,CAACa,sBAAsB,CAACL,KAAK,CAAC;MAC3D,IAAI,CAACI,QAAQ,EAAE;QACbN,OAAO,CAACQ,GAAG,CAACC,KAAK,CAAC;UAAEC,GAAG,EAAE,gBAAgB;UAAER;QAAM,CAAC,CAAC;QACnDD,KAAK,CAACU,UAAU,CAAC,wCAAwC,CAAC;MAC5D,CAAC,MAAM;QACLX,OAAO,CAACQ,GAAG,CAACC,KAAK,CAAC;UAAEC,GAAG,EAAE,wBAAwB;UAAEJ,QAAQ;UAAEJ;QAAM,CAAC,CAAC;QACrE,MAAMU,OAAO,GAAG,MAAMd,YAAY,CAACe,OAAO,CAACb,OAAO,CAACQ,GAAG,EAAEN,KAAK,CAAC;QAC9DD,KAAK,CAACa,IAAI,CAACF,OAAO,CAAC;MACrB;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdf,OAAO,CAACQ,GAAG,CAACO,KAAK,CAAC;QAChBL,GAAG,EAAE,uBAAuB;QAC5BK,KAAK,EAAGA,KAAK,CAAWC;MAC1B,CAAC,CAAC;MACFf,KAAK,CAACgB,mBAAmB,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;AACJ;AAEA,eAAexB,aAAa,CAACE,iBAAiB,EAAE;EAC9CuB,IAAI,EAAE,oBAAoB;EAC1BC,YAAY,EAAE,CAAC,mBAAmB;AACpC,CAAC,CAAC","ignoreList":[]}